" See: https://github.com/junegunn/vim-plug for tips with using Plug

" Specify a directory for plugins (for Neovim: 
call plug#begin('~/.local/share/nvim/plugged')

" Customize Vim
Plug 'itchyny/lightline.vim'
Plug 'schickling/vim-bufonly'
Plug 'haya14busa/incsearch.vim'
Plug 'vim-scripts/Rename'
Plug 'tpope/vim-sensible'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'szw/vim-maximizer'

" Easy async RSpec running
Plug 'tpope/vim-dispatch'
Plug 'AdUki/vim-dispatch-neovim'

" Colors
Plug 'sheerun/vim-polyglot'
Plug 'chriskempson/base16-vim'
Plug 'chriskempson/tomorrow-theme', {'rtp': 'vim/'}
Plug 'KKPMW/sacredforest-vim'
Plug 'junegunn/seoul256.vim'
Plug 'mhartington/oceanic-next'


" Finding Stuff 
Plug 'ctrlpvim/ctrlp.vim'
if executable('ag')
  Plug 'mileszs/ack.vim'
  let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
elseif executable('ack-grep')
  let g:ackprg="ack-grep -H --nocolor --nogroup --column"
  Plug 'mileszs/ack.vim'
elseif executable('ack')
  Plug 'mileszs/ack.vim'
endif


Plug 'tpope/vim-commentary'
Plug 'kana/vim-textobj-user'
Plug 'nelstrom/vim-textobj-rubyblock'
" Plug 'davebrace/vim-testnav'

" Use Idea
" Plug 'udalov/kotlin-vim'

" Completions
" Plug 'roxma/nvim-completion-manager'
" Plug 'roxma/python-support.nvim'
" Plug 'roxma/nvim-cm-tern',  {'do': 'npm install'}

" " for python completions
" " let g:python_support_python3_requirements = add(get(g:,'python_support_python3_requirements',[]),'jedi')
" " language specific completions on markdown file
" let g:python_support_python3_requirements = add(get(g:,'python_support_python3_requirements',[]),'mistune')

" " utils, optional
" " let g:python_support_python3_requirements = add(get(g:,'python_support_python3_requirements',[]),'psutil')
" " let g:python_support_python3_requirements = add(get(g:,'python_support_python3_requirements',[]),'setproctitle')

" " don't give |ins-completion-menu| messages.  For example,
" " '-- XXX completion (YYY)', 'match 1 of 2', 'The only match',
" set shortmess+=c

" let g:cm_sources_override = {
"     \ 'cm-tags': {'enable':0}
"     \ }

" Syntax and Language Plugins

Plug 'neomake/neomake'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

Plug 'wesQ3/vim-windowswap'


" golang
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }
Plug 'zchee/deoplete-go', { 'do': 'make'}

" nginx
Plug 'chr4/nginx.vim'

" Javascript
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
let g:jsx_ext_required = 1
Plug 'leshill/vim-json'

Plug 'geekjuice/vim-mocha' 
Plug 'moll/vim-node'

" Testing
" Plug 'janko-m/vim-test'
Plug 'thoughtbot/vim-rspec'
" Plug 'kassio/neoterm'
Plug 'martinda/Jenkinsfile-vim-syntax'

" Lisply Plugins
" Plug 'guns/vim-sexp' " Attempt to strip down?
" Plug 'tpope/vim-sexp-mappings-for-regular-people'
" Plug 'luochen1990/rainbow'
" Clojure plugins
" Plug 'tpope/vim-fireplace', { 'for': 'clojure' }
Plug 'guns/vim-clojure-static'
Plug 'guns/vim-clojure-highlight'

" Plug 'neovim/node-host'

" " TODO: Move to completion layer?
" Plug 'clojure-vim/async-clj-omni'
" Plug 'markwoodhall/vim-figwheel'

" Rust
Plug 'rust-lang/rust.vim'

" CSS
Plug 'hail2u/vim-css3-syntax'

Plug 'tpope/vim-markdown'
Plug 'hashivim/vim-terraform'

" ruby
Plug 'vim-ruby/vim-ruby'
Plug 'ngmy/vim-rubocop'

Plug 'editorconfig/editorconfig-vim'

" Initialize plugin system
call plug#end()

